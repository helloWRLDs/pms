syntax = "proto3";

package auth;

option go_package = "pkg/transport/grpc/services;pb";

import "pkg/transport/grpc/proto/models.proto";
import "google/protobuf/timestamp.proto";


service AuthService {
    rpc CreateCompany(CreateCompanyRequest) returns (CreateCompanyResponse);
    rpc ListCompanies(ListCompaniesRequest) returns (ListCompaniesResponse);
    rpc GetCompany(GetCompanyRequest) returns (GetCompanyResponse);
    rpc UpdateCompany(UpdateCompanyRequest) returns (UpdateCompanyResponse);

    rpc ListParticipants(ListParticipantsRequest) returns (ListParticipantsResponse);
    rpc AddParticipant(AddParticipantRequest) returns (AddParticipantResponse);
    rpc RemoveParticipant(RemoveParticipantRequest) returns (RemoveParticipantResponse);

    rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);
    rpc LoginUser(LoginUserRequest) returns (LoginUserResponse);
    rpc GetUser(GetUserRequest) returns (GetUserResponse);
    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);

    rpc InitiateOAuth2(InitiateOAuth2Request) returns (InitiateOAuth2Response);
    rpc CompleteOAuth2(CompleteOAuth2Request) returns (CompleteOAuth2Response);

    rpc GetUserRole(GetUserRoleRequest) returns (GetUserRoleResponse);

    rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse);
    rpc GetRole(GetRoleRequest) returns (GetRoleResponse);
    rpc ListRoles(ListRolesRequest) returns (ListRolesResponse);
    rpc UpdateRole(UpdateRoleRequest) returns (UpdateRoleResponse);
    rpc DeleteRole(DeleteRoleRequest) returns (DeleteRoleResponse);
}

// Company request/response messages
message CreateCompanyRequest {
    bool success = 1;
    models.NewCompany company = 2;
    string user_id = 3;
}

message CreateCompanyResponse {
    bool success = 1;
    models.Company company = 2;
}

message ListCompaniesRequest {
    models.CompanyFilter filter = 1;
}

message ListCompaniesResponse {
    bool success = 1;
    models.CompanyList companies = 2;
}

message GetCompanyRequest {
    string id = 1;
}

message GetCompanyResponse {
    bool success = 1;
    models.Company company = 2;
}

message UpdateCompanyRequest {
    string id = 1;
    models.Company company = 2;
}

message UpdateCompanyResponse {
    bool success = 1;
    models.Company company = 2;
}

// User request/response messages
message ListUsersRequest {
    models.UserFilter filter = 1;
}

message ListUsersResponse {
    bool success = 1;
    models.UserList userList = 2;
}

message LoginUserRequest {
    models.UserCredentials credentials = 1;
}

message LoginUserResponse {
    bool success = 1;
    models.AuthPayload payload = 2;
}

message RegisterUserRequest {
    models.NewUser new_user = 1;
}

message RegisterUserResponse {
    bool success = 1;
    models.User user = 2;
}

message GetUserRequest {
    string userID = 1;
}

message GetUserResponse {
    bool success = 1;
    models.User user = 2;
}

message UpdateUserRequest {
    string id = 1;
    models.User updated_user = 2;
}

message UpdateUserResponse {
    bool success = 1;
    models.User user = 2;
}

// Participant request/response messages
message ListParticipantsRequest {
    models.ParticipantFilter filter = 1;
}

message ListParticipantsResponse {
    bool success = 1;
    models.ParticipantList participants = 2;
}

message AddParticipantRequest {
    string company_id = 1;
    string user_id = 2;
    string role_id = 3;
}

message AddParticipantResponse {
    bool success = 1;
    models.Participant participant = 2;
}

message RemoveParticipantRequest {
    string user_id = 1;
    string company_id = 2;
}

message RemoveParticipantResponse {
    bool success = 1;
}

message InitiateOAuth2Request {
  string provider = 1; 
  string state = 2;
  string redirect_url = 3;
}

message InitiateOAuth2Response {
  string auth_url = 1;
  string state = 2;
}

message CompleteOAuth2Request {
  string provider = 1;
  string code = 2;
  string state = 3;
}

message CompleteOAuth2Response {
  bool success = 1;
  models.AuthPayload payload = 2;
  models.User user = 3;
}

message GetUserRoleRequest {
    string user_id = 1;
    string company_id = 2;
}

message GetUserRoleResponse {
    bool success = 1;
    models.Role role = 2;
}

// Role request/response messages
message CreateRoleRequest {
    models.NewRole role = 1;
}

message CreateRoleResponse {
    bool success = 1;
    models.Role role = 2;
}

message GetRoleRequest {
    string name = 1;
    string company_id = 2;
}

message GetRoleResponse {
    bool success = 1;
    models.Role role = 2;
}

message ListRolesRequest {
    string company_id = 1;
}

message ListRolesResponse {
    bool success = 1;
    repeated models.Role roles = 2;
}

message UpdateRoleRequest {
    string name = 1;
    string company_id = 2;
    models.Role role = 3;
}

message UpdateRoleResponse {
    bool success = 1;
    models.Role role = 2;
}

message DeleteRoleRequest {
    string name = 1;
    string company_id = 2;
}

message DeleteRoleResponse {
    bool success = 1;
}
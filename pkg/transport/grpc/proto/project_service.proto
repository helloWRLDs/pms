syntax = "proto3";

package project;

option go_package = "pkg/transport/grpc/services;pb";

import "pkg/transport/grpc/proto/models.proto";

service ProjectService {
    rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse);
    rpc GetProject(GetProjectRequest) returns (GetProjectResponse);
    rpc ListProjects(ListProjectsRequest) returns (ListProjectsResponse);

    rpc GetTask(GetTaskRequest) returns (GetTaskResponse);
    rpc ListTasks(ListTasksRequest) returns (ListTasksResponse);
    rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse);
    rpc UpdateTask(UpdateTaskRequest) returns (UpdateTaskResponse);
    rpc DeleteTask(DeleteTaskRequest) returns (DeleteTaskResponse);

    rpc TaskAssign (TaskAssignRequest) returns (TaskAssignResponse);
    rpc TaskUnassign (TaskUnassignRequest) returns (TaskUnassignResponse);

    rpc GetSprint(GetSprintRequest) returns (GetSprintResponse);
    rpc ListSprints(ListSprintsRequest) returns (ListSprintsResponse);
    rpc CreateSprint(CreateSprintRequest) returns (CreateSprintResponse);
    rpc UpdateSprint(UpdateSprintRequest) returns (UpdateSprintResponse);
    rpc DeleteSprint(DeleteSprintRequest) returns (DeleteSprintResponse);

    rpc CreateTaskComment(CreateTaskCommentRequest) returns (CreateTaskCommentResponse);
    rpc GetTaskComment(GetTaskCommentRequest) returns (GetTaskCommentResponse);
    rpc ListTaskComments(ListTaskCommentsRequest) returns (ListTaskCommentsResponse);
    rpc UpdateTaskComment(UpdateTaskCommentRequest) returns (UpdateTaskCommentResponse);
    rpc DeleteTaskComment(DeleteTaskCommentRequest) returns (DeleteTaskCommentResponse);
}


// PROJECT

message CreateProjectRequest {
    models.ProjectCreation creation = 1;
}

message CreateProjectResponse {
    bool success = 1;
    models.Project created_project = 2;
}

message GetProjectRequest {
    string id = 1;
}

message GetProjectResponse {
    bool success = 1;
    models.Project project = 2;
}

message ListProjectsRequest {
    models.ProjectFilter filter = 1;
}

message ListProjectsResponse {
    bool success = 1;
    models.ProjectList projects = 2;
}


// TASKS 

message GetTaskRequest {
    string id = 1;
    string code = 2;
}

message GetTaskResponse {
    bool success = 1;
    models.Task task = 2;
}

message ListTasksRequest {
    models.TaskFilter filter = 1;
}

message ListTasksResponse {
    bool success = 1;
    models.TaskList tasks = 2;
}

message CreateTaskRequest {
    models.TaskCreation creation = 1;
}

message CreateTaskResponse {
    bool success = 1;
    models.Task created_task = 2;
}

message UpdateTaskRequest {
    string id = 1;
    models.Task updated_task = 2;
}

message UpdateTaskResponse {
    bool success = 1;
    models.Task updated_task = 2;
}

message DeleteTaskRequest {
    string id = 1;
}

message DeleteTaskResponse {
    bool success = 1;
}

// TASK ASSIGNMENT

message TaskAssignRequest {
    string task_id = 1;
    string user_id = 2;
}

message TaskAssignResponse {
    bool success = 1;
}

message TaskUnassignRequest {
    string task_id = 1;
    string user_id = 2;
}

message TaskUnassignResponse {
    bool success = 1;
}



// SPRINTS

message GetSprintRequest {
    string id = 1;
}

message GetSprintResponse {
    bool success = 1;
    models.Sprint sprint = 2;
}

message ListSprintsRequest {
    models.SprintFilter filter = 1;
}

message ListSprintsResponse {
    bool success = 1;
    models.SprintList sprints = 2;
}

message CreateSprintRequest {
    models.SprintCreation creation = 1;
}

message CreateSprintResponse {
    bool success = 1;
    models.Sprint created_sprint = 2;
}

message UpdateSprintRequest {
    string id = 1;
    models.Sprint updated_sprint = 2;
}

message UpdateSprintResponse {
    bool success = 1;
    models.Sprint updated_sprint = 2;
}

message DeleteSprintRequest {
    string id = 1;
}

message DeleteSprintResponse {
    bool success = 1;
}


// COMMENTS

message CreateTaskCommentRequest {
    models.TaskCommentCreation creation = 1;
}

message CreateTaskCommentResponse {
    bool success = 1;
    models.TaskComment created_comment = 2;
}

message GetTaskCommentRequest {
    string id = 1;
}

message GetTaskCommentResponse {
    bool success = 1;
    models.TaskComment comment = 2;
}

message ListTaskCommentsRequest {
    models.TaskCommentFilter filter = 1;
}

message ListTaskCommentsResponse {
    bool success = 1;
    models.TaskCommentList list = 2; 
}

message UpdateTaskCommentRequest {
    string id = 1;
    models.TaskComment updated_comment = 2;
}

message UpdateTaskCommentResponse {
    bool success=1;
    models.TaskComment updated_comment = 2;
}

message DeleteTaskCommentRequest {
    string id = 1;
}

message DeleteTaskCommentResponse {
    bool success = 1;
}
